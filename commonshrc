# common configurations for some shells (bash, zsh, etc.)

export BASE_DOTFILES=~/.dotfiles

export READLINK=readlink

# per-host configurations

if [ -f ~/.commonshrc.host ]; then
  source ~/.commonshrc.host
fi

source "$BASE_DOTFILES/githubsh"

HOSTNAME=$(hostname)

HOSTNAMECOMMONSHRC=$BASE_DOTFILES/commonshrc.$HOSTNAME
if [ -n "$INSTALLING" ]; then
  echo "commonshrc looking for \"${HOSTNAMECOMMONSHRC}\"."
fi
if [ -f "$HOSTNAMECOMMONSHRC" ]; then
  source "$HOSTNAMECOMMONSHRC"
fi

PRIVATECOMMONSHRC=$BASE_DOTFILES/commonshrc.private
if [ -f "$PRIVATECOMMONSHRC" ]; then
  source "$PRIVATECOMMONSHRC"
fi


alias x=exit

# add dotfiles bin directory to PATH
DOTFILES_BIN="${BASE_DOTFILES}/bin"
if [ -d "${DOTFILES_BIN}" ]; then
  export PATH="${DOTFILES_BIN}:${PATH}"
fi

# add user bin directory to PATH
HOME_BIN="${HOME}/bin"
if [ -d "${HOME_BIN}" ]; then
  export PATH="${HOME_BIN}:${PATH}"
fi

# add user .bin directory to PATH
HOME_DOTBIN="${HOME}/.bin"
if [ -d "${HOME_DOTBIN}" ]; then
  export PATH="${HOME_DOTBIN}:${PATH}"
fi

USR_LOCAL_BIN="/usr/local/bin"
if [ -d "${USR_LOCAL_BIN}" ]; then
  export PATH="${USR_LOCAL_BIN}:${PATH}"
fi

# Go language env vars & path
GOPATH_DIR="/usr/local/Cellar/go/1.5.1"
if [ -d "${GOPATH_DIR}" ]; then
  export GOPATH="${GOPATH_DIR}"
  GOPATH_BIN="${GOPATH}/bin"
  if [ -d "${GOPATH_BIN}" ]; then
    export PATH="${GOPATH_BIN}:${PATH}"
  fi
fi

# add npm local bin to path
PATH="./node_modules/.bin:${PATH}"
# add global yarn bin to path
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

export FZF_DEFAULT_COMMAND='fd --type f'

alias npm-pack-check="npm pack && tar -xvzf *.tgz && rm -rf package *.tgz"

source <(npm completion)

export EDITOR="vim"

function strhas () {
  test "${0#*$1}" != "$0"
}

function noctrlchars () {
   perl -pe 's/\e([^\[\]]|\[.*?[a-zA-Z]|\].*?\a)//g' $@
}

alias g="git"

export NV="--no-verify"

# PHPUnit
alias phpunit="phpunit --colors"
alias phpunit--no-colors="phpunit --colors"

alias mochac="mocha --compilers coffee:coffee-script"

# start the ssh-agent in the background
eval "$(ssh-agent -s)" > /dev/null

# bc rc
if [ -f "${HOME}/.bcrc" ]; then
	export BC_ENV_ARGS=~/.bcrc
fi

# direnv hook
# https://github.com/zimbatm/direnv
if command -v direnv > /dev/null 2>&1; then
	SHELLNAME=''
	if [ -n "$BASH" ]; then
		SHELLNAME="bash"
	elif [ -n "$ZSH_NAME" ]; then
		SHELLNAME="zsh"
	fi
	if [ -n "$SHELLNAME" ]; then
		eval `direnv hook $SHELLNAME`
	fi
fi

# export environment variables from a file like Node.js's dotenv
function exenv() {
  [ -f ./.env ] && while read LINE; do
    if [[ ! $LINE =~ [^[:space:]] ]]; then
        continue
    fi    
    LINE=`echo $LINE | sed -Ee 's/[ \t]*export[ \t]+//g'`
    export $LINE
  done < ./.env
}

# less source highlighting
# http://blog.tersmitten.nl/how-to-enable-syntax-highlighting-in-less.html
LESSHILITE=/usr/share/source-highlight/src-hilite-lesspipe.sh
if [ -f $LESSHILITE ]; then
  export LESSOPEN="| $LESSHILITE %s"
fi

export LESS=' --RAW-CONTROL-CHARS --LINE-NUMBERS --HILITE-UNREAD '

# larger bash history (allow 32^3 entries)
export HISTSIZE=32768
export HISTFILESIZE=$HISTSIZE
# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
export HISTCONTROL=$HISTCONTROL${HISTCONTROL+:}ignoredups
# ... or force ignoredups and ignorespace
export HISTCONTROL=ignoreboth



# timestamps for bash history. www.debian-administration.org/users/rossen/weblog/1
HISTTIMEFORMAT='%F %T '
export HISTTIMEFORMAT

# z ( https://github.com/rupa/z )
ZFILE=$BASE_DOTFILES/z/z.sh
if [ -f $ZFILE ]; then
  source $ZFILE
fi

OS_DETECT_SCRIPT="$BASE_DOTFILES/os_detect.sh/os_detect.sh"
if [ -f "$OS_DETECT_SCRIPT" ]; then
  source "${OS_DETECT_SCRIPT}"
  OS_DETECT=$(os_detect)
  export OS_DETECT
fi

LSS_SCRIPT="$BASE_DOTFILES/lss.sh/lss.sh"
if [ -f "$LSS_SCRIPT" ]; then
  source "$LSS_SCRIPT" > /dev/null
fi

# From Heroku Toolbelt
HEROKU_BIN="/usr/local/heroku/bin"
if [ -d "${HEROKU_BIN}" ]; then
  export PATH="${HEROKU_BIN}:$PATH"
fi

# nvm
export NVM_DIR=~/.nvm
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

# ruby gem user bin path
# http://guides.rubygems.org/faqs/
if which ruby >/dev/null && which gem >/dev/null; then
  PATH="$(ruby -rubygems -e 'puts Gem.user_dir')/bin:$PATH"
fi

MAVEN_BIN="${HOME}/.mvbn/bin"
if [ -d "${MAVEN_BIN}" ]; then
  export PATH="${MAVEN_BIN}:$PATH"
fi

GITCONFIG_SH="${BASE_DOTFILES}/gitconfig/shell.sh"
if [ -f "${GITCONFIG_SH}" ]; then
  source "${GITCONFIG_SH}"
fi

# current directory in java classpath
export CLASSPATH=".:$CLASSPATH"

# open Sublime Text project in current directory
if command -v subl > /dev/null 2>&1; then
  function sublp () {
    subl *.sublime-project
  }
fi

if command -v jenv > /dev/null 2>&1; then
  eval "$(jenv init -)"
fi

# added by travis gem
[ -f ~/.travis/travis.sh ] && source ~/.travis/travis.sh

if command -v thefuck > /dev/null 2>&1; then
  eval "$(thefuck --alias)"
fi

function colorwdiff() {
  wdiff -n \
    -w $'\033[30;41m' -x $'\033[0m' \
    -y $'\033[30;42m' -z $'\033[0m' $@
}

